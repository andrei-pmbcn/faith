/**
* @author Andrei Pambuccian
* @copyright 2021 Andrei Pambuccian
* @license {https://www.gnu.org/licenses/gpl-3.0.en.html|GPL3.0 license}
*/

import Side from './side.js';

//[TODO] Make sure tests exist for all of these to ensure that they get
// properly loaded in the EncounterManager

/**
 * The configuration object used when creating an encounter. Make sure
 * charsSide1 and charsSide2 contain characters before passing this to the
 * EncounterManager object's constructor.
 * @typedef {object} Faith.Encounter.EncounterConfig
 *
 * @property {Side} side1 - the full details of side1
 *
 * @property {Side} side2 - the full details of side2
 *
 * @property {Side} neutral - the full details of the neutral side
 * 
 * @property {string} [eventPrefix='Encounter-'] - The prefix to append to
 * the start of the names of all events generated by the EncounterManager,
 * to avoid polluting the global event namespace.
 *
 * @property {object.<number>} [props={}] - A list of extra numerical
 * properties to be added to the social encounter, and their initial values
 *
 * @property {boolean} [raiseAlertOnErrors=true] - Whether alerts (modals)
 * should be displayed when encountering an error during the social
 * encounter
 *
 * @property {Array.<Faith.Encounter.Trait>} [traits=[]] - The list of the
 * encounter's traits
 */
EncounterConfig = {
	side1: new Side(),
	side2: new Side(),
	neutral: new Side(true),
	eventPrefix: '',
	props: {},
	raiseAlertOnErrors: true,
	traits: [],
}
